{"version":3,"file":"SizableText-f74081f3.js","sources":["../../node_modules/@tamagui/get-font-sized/dist/esm/index.js","../../node_modules/@tamagui/text/dist/esm/SizableText.js"],"sourcesContent":["import { getTokens } from \"@tamagui/core\";\nconst getFontSized = (sizeTokenIn = \"$true\", { font, fontFamily, props }) => {\n  var _a, _b, _c, _d, _e, _f;\n  if (!font) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.warn(\n        `Warning: No font found. For a sized text component, you either need to set fontFamily directly, or through the \"defaultFont\" setting in your createTamagui config.`\n      );\n    }\n    return;\n  }\n  const sizeToken = sizeTokenIn === \"$true\" ? getDefaultSizeToken(font) : sizeTokenIn;\n  const fontSize = props.fontSize || font.size[sizeToken];\n  const lineHeight = props.lineHeight || ((_a = font.lineHeight) == null ? void 0 : _a[sizeToken]);\n  const fontWeight = props.fontWeight || ((_b = font.weight) == null ? void 0 : _b[sizeToken]);\n  const letterSpacing = props.letterSpacing || ((_c = font.letterSpacing) == null ? void 0 : _c[sizeToken]);\n  const fontStyle = props.fontStyle || ((_d = font.style) == null ? void 0 : _d[sizeToken]);\n  const textTransform = props.textTransform || ((_e = font.transform) == null ? void 0 : _e[sizeToken]);\n  const color = props.color || ((_f = font.color) == null ? void 0 : _f[sizeToken]);\n  const style = {\n    color,\n    fontStyle,\n    textTransform,\n    fontFamily,\n    fontWeight,\n    letterSpacing,\n    fontSize,\n    lineHeight\n  };\n  if (process.env.NODE_ENV === \"development\") {\n    if (props[\"debug\"]) {\n      console.groupCollapsed(\"  \\u{1F539} getFontSized\", sizeTokenIn, sizeToken);\n      console.log({ style, props, font });\n      console.groupEnd();\n    }\n  }\n  return style;\n};\nconst cache = /* @__PURE__ */ new WeakMap();\nfunction getDefaultSizeToken(font) {\n  if (typeof font === \"object\" && cache.has(font)) {\n    return cache.get(font);\n  }\n  const sizeTokens = \"$true\" in font.size ? font.size : getTokens().size;\n  const sizeDefault = sizeTokens[\"$true\"];\n  const sizeDefaultSpecific = sizeDefault ? Object.keys(sizeTokens).find(\n    (x) => x !== \"$true\" && sizeTokens[x][\"val\"] === sizeDefault[\"val\"]\n  ) : null;\n  if (!sizeDefault || !sizeDefaultSpecific) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.warn(`No default size is set in your tokens for the \"true\" key, fonts will be inconsistent.\n\n      Fix this by having consistent tokens across fonts and sizes and setting a true key for your size tokens, or\n      set true keys for all your font tokens: \"size\", \"lineHeight\", \"fontStyle\", etc.`);\n    }\n    return Object.keys(font.size)[3];\n  }\n  cache.set(font, sizeDefaultSpecific);\n  return sizeDefaultSpecific;\n}\nexport {\n  getFontSized\n};\n//# sourceMappingURL=index.js.map\n","import { getFontSized } from \"@tamagui/get-font-sized\";\nimport { Text, styled } from \"@tamagui/web\";\nconst SizableText = styled(Text, {\n  name: \"SizableText\",\n  fontFamily: \"$body\",\n  variants: {\n    unstyled: {\n      false: {\n        size: \"$true\"\n      }\n    },\n    size: getFontSized\n  },\n  defaultVariants: {\n    unstyled: false\n  }\n});\nexport {\n  SizableText\n};\n//# sourceMappingURL=SizableText.js.map\n"],"names":["getFontSized","sizeTokenIn","font","fontFamily","props","_a","_b","_c","_d","_e","_f","sizeToken","getDefaultSizeToken","fontSize","lineHeight","fontWeight","letterSpacing","fontStyle","textTransform","cache","sizeTokens","getTokens","sizeDefault","sizeDefaultSpecific","x","SizableText","styled","Text"],"mappings":"kFACK,MAACA,EAAe,CAACC,EAAc,QAAS,CAAE,KAAAC,EAAM,WAAAC,EAAY,MAAAC,KAAY,CAC3E,IAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxB,GAAI,CAACR,EAMH,OAEF,MAAMS,EAAYV,IAAgB,QAAUW,EAAoBV,CAAI,EAAID,EAClEY,EAAWT,EAAM,UAAYF,EAAK,KAAKS,CAAS,EAChDG,EAAaV,EAAM,cAAgBC,EAAKH,EAAK,aAAe,KAAO,OAASG,EAAGM,CAAS,GACxFI,EAAaX,EAAM,cAAgBE,EAAKJ,EAAK,SAAW,KAAO,OAASI,EAAGK,CAAS,GACpFK,EAAgBZ,EAAM,iBAAmBG,EAAKL,EAAK,gBAAkB,KAAO,OAASK,EAAGI,CAAS,GACjGM,EAAYb,EAAM,aAAeI,EAAKN,EAAK,QAAU,KAAO,OAASM,EAAGG,CAAS,GACjFO,EAAgBd,EAAM,iBAAmBK,EAAKP,EAAK,YAAc,KAAO,OAASO,EAAGE,CAAS,GAmBnG,MAjBc,CACZ,MAFYP,EAAM,SAAWM,EAAKR,EAAK,QAAU,KAAO,OAASQ,EAAGC,CAAS,GAG7E,UAAAM,EACA,cAAAC,EACA,WAAAf,EACA,WAAAY,EACA,cAAAC,EACA,SAAAH,EACA,WAAAC,CACJ,CASA,EACMK,EAAwB,IAAI,QAClC,SAASP,EAAoBV,EAAM,CACjC,GAAI,OAAOA,GAAS,UAAYiB,EAAM,IAAIjB,CAAI,EAC5C,OAAOiB,EAAM,IAAIjB,CAAI,EAEvB,MAAMkB,EAAa,UAAWlB,EAAK,KAAOA,EAAK,KAAOmB,EAAW,EAAC,KAC5DC,EAAcF,EAAW,MACzBG,EAAsBD,EAAc,OAAO,KAAKF,CAAU,EAAE,KAC/DI,GAAMA,IAAM,SAAWJ,EAAWI,CAAC,EAAE,MAAWF,EAAY,GAC9D,EAAG,KACJ,MAAI,CAACA,GAAe,CAACC,EAOZ,OAAO,KAAKrB,EAAK,IAAI,EAAE,CAAC,GAEjCiB,EAAM,IAAIjB,EAAMqB,CAAmB,EAC5BA,EACT,CCzDK,MAACE,EAAcC,EAAOC,EAAM,CAC/B,KAAM,cACN,WAAY,QACZ,SAAU,CACR,SAAU,CACR,MAAO,CACL,KAAM,OACP,CACF,EACD,KAAM3B,CACP,EACD,gBAAiB,CACf,SAAU,EACX,CACH,CAAC","x_google_ignoreList":[0,1]}