{"version":3,"file":"DeviceSync.stories-49c23b2a.js","sources":["../../node_modules/react-redux/es/hooks/useStore.js","../../node_modules/react-redux/es/hooks/useDispatch.js","../../src/pages/DeviceSyncStatus/DeviceSyncStatus.tsx"],"sourcesContent":["import { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext, createReduxContextHook } from './useReduxContext';\n/**\n * Hook factory, which creates a `useStore` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useStore` hook bound to the specified context.\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : // @ts-ignore\n  createReduxContextHook(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\n * A hook to access the redux store.\n *\n * @returns {any} the redux store\n *\n * @example\n *\n * import React from 'react'\n * import { useStore } from 'react-redux'\n *\n * export const ExampleComponent = () => {\n *   const store = useStore()\n *   return <div>{store.getState()}</div>\n * }\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useDispatch` hook bound to the specified context.\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\n * A hook to access the redux `dispatch` function.\n *\n * @returns {any|function} redux store's `dispatch` function\n *\n * @example\n *\n * import React, { useCallback } from 'react'\n * import { useDispatch } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const dispatch = useDispatch()\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\n *   return (\n *     <div>\n *       <span>{value}</span>\n *       <button onClick={increaseCounter}>Increase counter</button>\n *     </div>\n *   )\n * }\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","import { Stack, YStack } from 'tamagui'\n\nimport { Button } from '@status-im/components'\n\nimport Titles from '../../components/General/Titles'\nimport NimbusLogo from '../../components/Logos/NimbusLogo'\nimport PageWrapperShadow from '../../components/PageWrappers/PageWrapperShadow'\nimport SyncStatusCardConsensus from './SyncStatusCardConsensus'\nimport SyncStatusCardExecution from './SyncStatusCardExecution'\nimport { setPinnedMessage } from '../../redux/PinnedMessage/slice'\nimport { useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\n\nconst DeviceSyncStatus = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(\n      setPinnedMessage({\n        id: '123',\n        text: 'You are currently syncing to the Nimbus Validator Client and Beacon node. This may take a while... Please stay put until you can access the Node Manager.',\n        pinned: true,\n      }),\n    )\n  }, [dispatch])\n  return (\n    <PageWrapperShadow rightImageSrc=\"/background-images/sync-status-background.png\">\n      <YStack\n        space={'$4'}\n        style={{\n          justifyContent: 'end',\n          alignItems: 'start',\n          maxWidth: '100%',\n        }}\n      >\n        <NimbusLogo />\n        <Titles\n          title=\"Sync Status\"\n          subtitle=\"Monitor your Validator Client and Beacon Node syncing progression.\"\n        />\n        <YStack style={{ width: '100%' }}>\n          <SyncStatusCardExecution synced={132432} total={200000} />\n          <SyncStatusCardConsensus synced={149500} total={160000} />\n        </YStack>\n        <Stack style={{ marginTop: '1rem' }}>\n          <Button>Continue</Button>\n        </Stack>\n      </YStack>\n    </PageWrapperShadow>\n  )\n}\n\nexport default DeviceSyncStatus\n"],"names":["createStoreHook","context","ReactReduxContext","useReduxContext","useDefaultReduxContext","createReduxContextHook","store","useStore","createDispatchHook","useDefaultStore","useDispatch","DeviceSyncStatus","dispatch","useEffect","setPinnedMessage","jsx","PageWrapperShadow","jsxs","YStack","NimbusLogo","Titles","SyncStatusCardExecution","SyncStatusCardConsensus","Stack","Button"],"mappings":"q8BASO,SAASA,EAAgBC,EAAUC,EAAmB,CAC3D,MAAMC,EACNF,IAAYC,EAAoBE,EAChCC,EAAuBJ,CAAO,EAC9B,OAAO,UAAoB,CACzB,KAAM,CACJ,MAAAK,CACD,EAAGH,EAAe,EAEnB,OAAOG,CACX,CACA,CAiBO,MAAMC,EAAwBP,EAAiB,EC5B/C,SAASQ,EAAmBP,EAAUC,EAAmB,CAC9D,MAAMK,EACNN,IAAYC,EAAoBO,EAAkBT,EAAgBC,CAAO,EACzE,OAAO,UAAuB,CAG5B,OAFcM,IAED,QACjB,CACA,CAuBO,MAAMG,EAA2BF,EAAoB,EC3BtDG,EAAmB,IAAM,CAC7B,MAAMC,EAAWF,IACjBG,OAAAA,EAAAA,UAAU,IAAM,CACdD,EACEE,EAAiB,CACf,GAAI,MACJ,KAAM,4JACN,OAAQ,EAAA,CACT,CAAA,CACH,EACC,CAACF,CAAQ,CAAC,EAEXG,EAAAA,IAACC,EAAkB,CAAA,cAAc,gDAC/B,SAAAC,EAAA,KAACC,EAAA,CACC,MAAO,KACP,MAAO,CACL,eAAgB,MAChB,WAAY,QACZ,SAAU,MACZ,EAEA,SAAA,CAAAH,EAAA,IAACI,EAAW,EAAA,EACZJ,EAAA,IAACK,EAAA,CACC,MAAM,cACN,SAAS,oEAAA,CACX,SACCF,EAAO,CAAA,MAAO,CAAE,MAAO,MACtB,EAAA,SAAA,CAAAH,EAAA,IAACM,EAAwB,CAAA,OAAQ,OAAQ,MAAO,IAAQ,EACvDN,EAAA,IAAAO,EAAA,CAAwB,OAAQ,OAAQ,MAAO,KAAQ,CAAA,EAC1D,EACAP,EAAAA,IAACQ,EAAM,CAAA,MAAO,CAAE,UAAW,MACzB,EAAA,SAAAR,EAAAA,IAACS,EAAO,CAAA,SAAA,UAAA,CAAQ,CAClB,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ;;","x_google_ignoreList":[0,1]}