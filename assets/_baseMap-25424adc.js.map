{"version":3,"file":"_baseMap-25424adc.js","sources":["../../node_modules/lodash/_createBaseEach.js","../../node_modules/lodash/_baseEach.js","../../node_modules/lodash/_baseMap.js"],"sourcesContent":["var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n"],"names":["isArrayLike","require$$0","createBaseEach","eachFunc","fromRight","collection","iteratee","length","index","iterable","_createBaseEach","baseForOwn","require$$1","baseEach","_baseEach","baseMap","result","value","key","_baseMap"],"mappings":"mGAAA,IAAIA,EAAcC,EAUlB,SAASC,EAAeC,EAAUC,EAAW,CAC3C,OAAO,SAASC,EAAYC,EAAU,CACpC,GAAID,GAAc,KAChB,OAAOA,EAET,GAAI,CAACL,EAAYK,CAAU,EACzB,OAAOF,EAASE,EAAYC,CAAQ,EAMtC,QAJIC,EAASF,EAAW,OACpBG,EAAQJ,EAAYG,EAAS,GAC7BE,EAAW,OAAOJ,CAAU,GAExBD,EAAYI,IAAU,EAAEA,EAAQD,IAClCD,EAASG,EAASD,CAAK,EAAGA,EAAOC,CAAQ,IAAM,IAAnD,CAIF,OAAOJ,CACX,CACA,CAEA,IAAAK,EAAiBR,EC/BbS,EAAaV,EACbC,EAAiBU,EAUjBC,EAAWX,EAAeS,CAAU,EAExCG,EAAiBD,ECbbA,EAAWZ,EACXD,EAAcY,EAUlB,SAASG,EAAQV,EAAYC,EAAU,CACrC,IAAIE,EAAQ,GACRQ,EAAShB,EAAYK,CAAU,EAAI,MAAMA,EAAW,MAAM,EAAI,GAElE,OAAAQ,EAASR,EAAY,SAASY,EAAOC,EAAKb,EAAY,CACpDW,EAAO,EAAER,CAAK,EAAIF,EAASW,EAAOC,EAAKb,CAAU,CACrD,CAAG,EACMW,CACT,CAEA,IAAAG,EAAiBJ","x_google_ignoreList":[0,1,2]}